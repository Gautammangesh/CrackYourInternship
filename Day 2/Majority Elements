class Solution {
    public int majorityElement(int[] nums) {
        int n = nums.length; // Corrected to get the actual length of the array
        int cnt = 0; // Count
        int el = 0; // Element

        // Applying the algorithm:
        for (int i = 0; i < n; i++) {
            if (cnt == 0) {
                cnt = 1;
                el = nums[i];
            } else if (el == nums[i]) {
                cnt++;
            } else {
                cnt--;
            }
        }

        // Checking if the stored element is the majority element:
        int cnt1 = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == el) {
                cnt1++;
            }
        }

        if (cnt1 > (n / 2)) {
            return el;
        }
        // Return a special value or handle it based on the problem constraints.
        // Here, returning el as the given problem assumes there is always a majority element.
        return el;
    }
}
