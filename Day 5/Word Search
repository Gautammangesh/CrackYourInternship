class Solution {
    public boolean solve(int row, int col, char[][] board, String word, int index, int[][] vis) {
        if (index == word.length()) return true;

        vis[row][col] = 1;
        int[] drow = {-1, 0, 1, 0};
        int[] dcol = {0, 1, 0, -1};

        int n = board.length;
        int m = board[0].length;

        for (int i = 0; i < 4; i++) {
            int nrow = row + drow[i];
            int ncol = col + dcol[i];

            if (nrow >= 0 && nrow < n && ncol < m && ncol >= 0 &&
                vis[nrow][ncol] == 0 && board[nrow][ncol] == word.charAt(index)) {
                if (solve(nrow, ncol, board, word, index + 1, vis)) return true;
            }
        }

        vis[row][col] = 0;
        return false;
    }

    public boolean exist(char[][] board, String word) {
        int n = board.length;
        int m = board[0].length;
        int[][] vis = new int[n][m];

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (board[i][j] == word.charAt(0)) {
                    if (solve(i, j, board, word, 1, vis)) return true;
                }
            }
        }
        return false;
    }
}