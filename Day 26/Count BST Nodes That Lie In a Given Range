class Solution
{
    // Function to count the number of nodes in BST that lie in the given range.
    int getCount(Node root, int l, int h) {
        // Base case
        if (root == null) {
            return 0;
        }

        // If the current node is within the range, include it in the count
        if (root.data >= l && root.data <= h) {
            return 1 + getCount(root.left, l, h) + getCount(root.right, l, h);
        }

        // If the current node's value is smaller than l, then move to the right subtree
        else if (root.data < l) {
            return getCount(root.right, l, h);
        }

        // If the current node's value is greater than h, then move to the left subtree
        else {
            return getCount(root.left, l, h);
        }
    }
}
