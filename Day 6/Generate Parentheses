class Solution {
    public void solve(int open, int close, int n, List<String> res, String s) {
        if (open == n && close == n) {
            res.add(s);
            return;
        }

        if (open < n) {
            solve(open + 1, close, n, res, s + '(');
        }
        if (close < open) {
            solve(open, close + 1, n, res, s + ')');
        }
    }

    public List<String> generateParenthesis(int n) {
        List<String> res = new ArrayList<>();
        solve(0, 0, n, res, "");
        return res;        
    }
}